@page "/traindelay"
@inject HttpClient Http

<h1>Train delay information</h1>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table>
        <thead>
            <tr>
                <th>Last Update</th>
                <th>Company</th>
                <th>Line</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.LastUpdate.ToString()</td>
                    <td>@forecast.Company</td>
                    <td>@forecast.Name</td>
                </tr>
            }
        </tbody>
    </table>
}

@functions
{
    TrainForecast[] forecasts;

    string url = "https://rti-giken.jp/fhc/api/train_tetsudo/delay.json";

    protected override async Task OnInitAsync()
    {
        forecasts = await Http.GetJsonAsync<TrainForecast[]>(url);
    }

    class TrainForecast
    {
        public long Lastupdate_Gmt { get; set; }
        public DateTimeOffset LastUpdate
        {
            get
            {
                return DateTimeOffset.FromUnixTimeMilliseconds(Lastupdate_Gmt);
            }
        }
        public string Company { get; set; }
        public string Name { get; set; }
        public string Source { get; set; }
    }
}